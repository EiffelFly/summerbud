---
import { SITE, OPEN_GRAPH } from "../site-config";
import { Nullable } from "../types/general";

export interface Props {
  meta: {
    title: Nullable<string>;
    ogLocale: Nullable<string>;
    description: Nullable<string>;
    image: {
      src: Nullable<string>;
      alt:Nullable<string>;
    };
  };
  canonicalURL: Nullable<URL | string>;
}

const { meta, canonicalURL } = Astro.props as Props;
const formattedContentTitle = meta.title
  ? `${meta.title} | ${SITE.title}`
  : SITE.title;
const imageSrc = meta.image.src ?? OPEN_GRAPH.image.src;
const canonicalImageSrc = new URL(imageSrc, Astro.site);
const imageAlt = meta.image.alt ?? OPEN_GRAPH.image.alt;
---

<link rel="canonical" href={canonicalURL} />
<title>{formattedContentTitle}</title>

<!-- OpenGraph Tags -->
<meta property="og:title" content={formattedContentTitle} />
<meta property="og:type" content="article" />
<meta property="og:url" content={canonicalURL} />
<meta property="og:locale" content={meta.ogLocale ?? SITE.defaultLanguage} />
<meta property="og:image" content={canonicalImageSrc} />
<meta property="og:image:alt" content={imageAlt} />
<meta
  name="description"
  property="og:description"
  content={meta.description ? meta.description : SITE.description}
/>
<meta property="og:site_name" content={SITE.title} />

<!-- Twitter Tags -->
<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:site" content={OPEN_GRAPH.twitter} />
<meta name="twitter:title" content={formattedContentTitle} />
<meta
  name="twitter:description"
  content={meta.description ? meta.description : SITE.description}
/>
<meta name="twitter:image" content={canonicalImageSrc} />
<meta name="twitter:image:alt" content={imageAlt} />
<script defer data-domain="summerbud.org" src="https://plausible.io/js/plausible.js"></script>

<!--
  TODO: Add json+ld data, maybe https://schema.org/APIReference makes sense?
  Docs: https://developers.google.com/search/docs/advanced/structured-data/intro-structured-data
  https://www.npmjs.com/package/schema-dts seems like a great resource for implementing this.
  Even better, there's a React component that integrates with `schema-dts`: https://github.com/google/react-schemaorg
-->
