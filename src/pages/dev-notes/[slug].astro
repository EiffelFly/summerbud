---
import Giscus from "../../components/Giscus";
import { getFormattedTime } from "../../utils";
import SiteLayout, {
  Props as SiteLayoutProps,
} from "../../layouts/SiteLayout.astro";
import { ArticleFrontMatter } from "../../types/general";
import { SITE } from '../../site-config';
import Image from "../../components/Image";

export async function getStaticPaths() {
  let posts = await Astro.glob<ArticleFrontMatter>("../../../_data/dev-notes/*.md");

  posts = posts.sort((a, b) => {
    if (
      new Date(a.frontmatter.publishedAt) > new Date(b.frontmatter.publishedAt)
    ) {
      return -1;
    } else {
      return 1;
    }
  });

  return posts.map((e) => {
    return {
      params: {
        slug: e.frontmatter.slug,
      },
      props: {
        post: e,
      },
    };
  });
}

const { slug } = Astro.params;
const { post } = Astro.props;
const publishedTime = getFormattedTime(post.frontmatter.publishedAt);
const featureImgSource = post.frontmatter.featureImgSource

const siteMeta: SiteLayoutProps["meta"] = {
  title: post.frontmatter.title,
  ogLocale: "zh-TW",
  description: post.frontmatter.description,
  image: {
    src: post.frontmatter.featureImg,
    alt: post.frontmatter.featureImgAlt,
  },
};
---

<SiteLayout fullWidth={true} meta={siteMeta} canonicalURL={`${SITE.domain}/dev-notes/${slug}`}>
  <Image width="w-full" height="h-[400px] md:h-[600px]" src={siteMeta.image.src} alt={siteMeta.image.alt} source={featureImgSource}
    marginBottom="mb-20" />
  <article class="mx-auto w-full prose lg:prose-lg dark:prose-dark mb-20">
    <h1>{post.frontmatter.title}</h1>
    <p>{publishedTime}</p>
    <div class="w-full border border-sd-brgreen mb-20"></div>
    <post.Content></post.Content>
  </article>
  <Giscus client:load />
</SiteLayout>